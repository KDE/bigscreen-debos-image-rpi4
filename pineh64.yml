{{- $architecture := or .architecture "arm64" -}}
{{ $suite :=  "bionic" }}
{{- $image := or .image "mycroft-pineh64.img" -}}

architecture: {{ $architecture }}

actions:
  - action: debootstrap
    keyring-package: ubuntu-keyring
    keyring-file: ubuntu-archive-keyring.gpg
    suite: {{ $suite }}
    components:
      - main
      - restricted
      - multiverse
      - universe
    mirror: http://ports.ubuntu.com/ubuntu-ports
    variant: minbase

  - action: run
    description: Add bionic-updates apt repo
    chroot: true
    command: echo "deb http://ports.ubuntu.com/ubuntu-ports bionic-updates main restricted multiverse universe" >> /etc/apt/sources.list

  - action: run
    description: Add bionic-backports apt repo
    chroot: true
    command: echo "deb http://ports.ubuntu.com/ubuntu-ports bionic-backports main restricted multiverse universe" >> /etc/apt/sources.list

  - action: apt
    packages:
      - gnupg
      - wget
      - curl
      - apt-transport-https
      - software-properties-common
  
  - action: run
    description: Add KDE Neon gpg key
    chroot: true
    command: apt-key adv --keyserver keyserver.ubuntu.com --recv-keys '444D ABCF 3667 D028 3F89  4EDD E6D4 7362 5575 1E5D'

  - action: run
    description: Add Xenon gpg key
    chroot: true
    command: apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 'CB87 A99C D05E 5E0C 7017  4A68 E8AF 1B0B 45D8 3EBD'

  - action: run
    description: Add neon apt repo
    chroot: true
    command: echo "deb https://archive.neon.kde.org/unstable bionic main" > /etc/apt/sources.list.d/neon.list

  - action: run
    description: Add xneon apt repo
    chroot: true
    command: echo "deb http://archive.xenon.pangea.pub/unstable bionic main" > /etc/apt/sources.list.d/xenon.list

    # Hardware specific parts
  - action: download
    description: Fetch latest kernel ci build
    url: https://files.xenon.pangea.pub/pineh64/archive.zip
    name: kernel
    filename: kernel.zip
    unpack: true
    compression: zip

  - action: overlay
    origin: kernel
    source: .
    destination: /var/tmp/

  - action: run
    origin: kernel
    chroot: true
    description: Install kernel
    label: dpkg
    command: dpkg -i /var/tmp/*.deb && cd /lib/modules/*-mycroft && mkdir extra && cp /var/tmp/mali_kbase.ko extra/ && rm /var/tmp/* -r

  - action: download
    description: Fetch u-boot build
    url: https://files.xenon.pangea.pub/pineh64/u-boot-sunxi-with-spl.bin
    name: u-boot
    filename: u-boot-sunxi-with-spl.bin
    unpack: false

  - action: overlay
    origin: u-boot
    source: .
    destination: /var/tmp/u-boot-sunxi-with-spl.bin

  - action: download
    url: http://frozenmazegames.se/mycroft-core-setup-aarch64.tar.gz
    name: mycroft-core
    filename: mycroft-core-setup-aarch64.tar.gz

  - action: overlay
    origin: mycroft-core
    source: .
    destination: /var/tmp/mycroft-core-setup-aarch64.tar.gz

  - action: download
    url: http://frozenmazegames.se/mimic-arm64_1.2.0.2+1559651054-1.deb
    name: mimic
    filename: mimic-arm64_1.2.0.2+1559651054-1.deb

  - action: overlay
    origin: mimic
    source: .
    destination: /var/tmp/mimic-arm64_1.2.0.2+1559651054-1.deb

  - action: overlay
    description: fix DNS inside container
    source: resolv

    # Mainline hardware specific packages
  - action: apt
    description: Basic packages
    packages:
      - bash-completion
      - vim
      - u-boot-tools
      - alsa-utils
      - git
      - python3
      - linux-firmware
      - kmod

  - action: run
    chroot: true
    description: Run depmod for extra module
    label: depmod
    command: depmod

  - action: overlay
    description: fix DNS inside container
    source: resolv

  - action: apt
    description: Mycroft runtime dependencies
    packages:
      - pcre2-utils
      - portaudio19-dev
      - jq
      - mpg123
      - libfann-dev
      - flac
      - breeze-icon-theme
 
  - action: overlay
    description: fix DNS inside container
    source: resolv

    # Desktop packages
  - action: apt
    description: Plama desktop packages
    packages:
      - sddm
      - kwin-x11
      - plasma-minishell
      - plasma-pa
      - plasma-widgets-addons
      - libkf5wallet-bin
      - openssh-server
      - ftp
      - i2c-tools
      - nano

  - action: overlay
    description: fix DNS inside container
    source: resolv

    # Mycroft packages
  - action: apt
    description: Mycroft packages
    packages:
      - mycroft-gui
      - mycroft-gui-mark-2
      - mycroft-settings
      - mycroft-skill-installer
      - qml-module-org-kde-lottie
      - plasma-workspace-wallpapers

    # Todo ugly, revert me
  - action: apt
    description: Networking packages
    packages:
      - network-manager
      - plasma-nm
      - ubuntu-minimal

  - action: overlay
    source: pineh64
    destination: /

  - action: run
    description: Set up user account
    chroot: true
    script: scripts/02-setup_pine_user.sh

  - action: run
    description: Set up system locale
    chroot: true
    script: scripts/03-setup_locale.sh

  - action: run
    description: Install mycroft base software
    chroot: true
    script: scripts/92-clone-mycroft.sh

  - action: run
    description: remove zfs
    chroot: true
    script: scripts/051-zfs.sh

  - action: image-partition
    imagename: {{ $image }}
    imagesize: 8GB
    partitiontype: msdos
    mountpoints:
      - mountpoint: /
        partition: ROOTFS
    partitions:
      - name: ROOTFS
        fs: ext4
        start: 1M
        end: 100%
        flags: [ boot ]

  - action: run
    description: Set hostname
    chroot: true
    command: echo pineh64 > /etc/hostname

  - action: run
    description: Compile u-boot script
    chroot: true
    label: mkimage
    command: mkimage -A arm -O linux -T script -C none -n "U-Boot boot script" -d /boot/boot.txt /boot/boot.scr

  - action: filesystem-deploy
    description: Deploying filesystem into image

  - action: raw
    origin: filesystem
    source: /var/tmp/u-boot-sunxi-with-spl.bin
    offset: 8192

  - action: run
    description: Creating ramdisk
    chroot: true
    script: scripts/93-create_ramdisk.sh

  - action: run
    description: Creating swap file
    chroot: true
    script: scripts/94-create_swap.sh

  - action: run
    description: Create bmap file
    postprocess: true
    command: bmaptool create {{ $image }} > {{ $image }}.img.bmap

  - action: run
    description: Compress image
    postprocess: true
    command: gzip -f9 {{ $image }}
